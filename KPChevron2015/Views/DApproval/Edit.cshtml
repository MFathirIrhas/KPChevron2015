@model KPChevron2015.Models.Survey

@{
    ViewBag.Title = "Edit";
}

<h2>Approval</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Survey</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SurveyID)

        <div class="form-group">
            @Html.LabelFor(model => model.WellID, "WellID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("WellID", null, new { @readonly = "readonly" })*@
                @Html.TextBoxFor(model => model.WellID,  new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.WellID, "", new { @class = "text-danger" })
                @Html.ActionLink("Well Detail", "DetailWell", new { id = Model.WellID })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SurveyDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextBoxFor(model => model.SurveyDesc, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.SurveyDesc, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.SurveyDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Type, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Team, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Team, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.RequestBy, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.RequestBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.RequestDate, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" >
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } }) *Please Comment Before Confirm
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("Edit", new List<SelectListItem> { new SelectListItem { Text = "Approved" }, new SelectListItem { Text = "Rejected" } }, new { htmlAttributes = new { @class = "form-control" } }) *Please Decide Before Confirm*@
                @*@Html.DropDownList("SetStatus", null, new { htmlAttributes = new { @class = "form-control" } }) *Please Decide Before Confirm*@
                <select name="status">
                    <option>Approved</option>
                    <option>Need To Revise</option>
                    <option>Rejected</option>
                </select> *Please Confirm Your Approval
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>*
        

        <div class="form-group">
            @Html.LabelFor(model => model.Progress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Progress, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Progress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApprovedBy, new { htmlAttributes = new { @class = "form-control" } }) *Your Name
                @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ApprovedDate, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ApprovedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubmitBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SubmitBy, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.SubmitBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubmitDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SubmitDate, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.SubmitDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PICName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PICName, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.PICName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileData, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextBoxFor(model => model.FileData, new { @readonly = "readonly" })*@ *PIC Only
                @Html.ValidationMessageFor(model => model.FileData, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="Command" value="Confirm" class="btn btn-default" /> 
                
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
